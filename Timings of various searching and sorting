#include <bits/stdc++.h>
using namespace std;
int partition (int arr[], int low, int high);
void bubbleSort(int arr[], int n);
void swap(int* num1,int* num2);
void quickSort(int arr[], int low, int high);
void linearSearch(int arr[],int len,int value){
    cout<<"\n For Linear Search \n";
    int i;
    for(i=0;i<len;i++){
        if(arr[i]==value){
            cout<<"Value found at "<<i<<endl;
            return;
        }
    }
}
void binarySearch(int arr[], int l, int r, int value)
{
    cout<<"\n For Binary Search \n";
    while (l <= r) {
        int m = l + (r - l) / 2;
 
        if (arr[m] == value){
            cout<<"Value found at "<<m<<"\n";
            return;
        }
        if (arr[m] < value)
            l = m + 1;
        else
            r = m - 1;
    }
 
    cout<<"Value="<<value<<"\nnot found"<<endl;
    return ;
}
int main()
{
    int i,value;
    int array[1000];
	clock_t start, end;
	//For Bubble Sort
	 for(i=0;i<1000;i++){
        array[i] = rand()%1000;
    }
	start = clock();
    bubbleSort(array,1000);
	end = clock();
	double time_taken = double (end - start) / double (CLOCKS_PER_SEC);
	cout << "Time taken by program is : " << fixed<< time_taken << setprecision(5);
	cout << " sec " << endl;
	//For Quick Sort
	 for(i=0;i<1000;i++){
        array[i] = rand()%1000;
    }
	cout<<"\n For Quick Sort\n";
	start = clock();
    quickSort(array,0,999);
	end = clock();
	time_taken = (end - start) / (CLOCKS_PER_SEC);
	cout << "Time taken by program is : " << fixed<< time_taken << setprecision(5);
	cout << " sec " << endl;
	//Time for binary search
	value=rand()%100;
	start = clock();
    binarySearch(array,0,1000,value);
	end = clock();
	time_taken = (end - start) / (CLOCKS_PER_SEC);
	cout << "Time taken by program is : " << fixed<< time_taken << setprecision(5);
	cout << " sec " << endl;
	//Time for linear search
	 for(i=0;i<1000;i++){
        array[i] = rand()%1000;
    }
	start = clock();
    linearSearch(array,1000,value);
	end = clock();
	time_taken = (end - start) / (CLOCKS_PER_SEC);
	cout << "Time taken by program is : " << fixed<< time_taken << setprecision(5);
	cout << " sec " << endl;
	return 0;
}
int partition (int arr[], int low, int high)
{
    int pivot = arr[high];    // pivot
    int i = (low - 1);  // Index of smaller element
 
    for (int j = low; j <= high- 1; j++)
    {
        // If current element is smaller than or
        // equal to pivot
        if (arr[j] <= pivot)
        {
            i++;    // increment index of smaller element
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}
void swap(int* num1,int* num2){
    int temp = *num1;
    *num1 = *num2;
    *num2= temp;
}
void bubbleSort(int arr[], int n)
{
    cout<<"\n For Bubble Sort \n";
    int i, j;
    for (i = 0; i < n-1; i++){    
        for (j = 0; j < n-i-1; j++){
            if (arr[j] > arr[j+1])
                swap( &arr[j], &arr[j+1]);
        }
    }
}
void quickSort(int arr[], int low, int high)
{
    if (low < high)
    {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}
