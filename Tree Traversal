#include <iostream>
using namespace std;
class Node {
    public:
	int data;
	Node *left, *right;
	Node(int data)
	{
		this->data = data;
		left = right = NULL;
	}
};
void printPostorder(struct Node* node);
void printInorder(struct Node* node);
void printPreorder(struct Node* node);
int main()
{
	Node* root = new Node(11);
	root->left = new Node(22);
	root->right = new Node(33);
	root->left->left = new Node(44);
	root->left->right = new Node(55);
	cout << "\nPreorder traversal of binary tree is \n";
	printPreorder(root);
	cout << "\nInorder traversal of binary tree is \n";
	printInorder(root);
	cout << "\nPostorder traversal of binary tree is \n";
	printPostorder(root);
	return 0;
}
void printPostorder(struct Node* node)
{
	if (node == NULL)
		return;
	printPostorder(node->left);
	printPostorder(node->right);
	cout << node->data << " ";
}
void printInorder(struct Node* node)
{
	if (node == NULL)
		return;
	printInorder(node->left);
	cout << node->data << " ";
	printInorder(node->right);
}
void printPreorder(struct Node* node)
{
	if (node == NULL)
		return;
	cout << node->data << " ";
	printPreorder(node->left);
	printPreorder(node->right);
}
